{
  "id": "fc74c45e-c1f2-4ce7-8156-4c3efe47c88a",
  "realm": "task-management",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "81fbe7d4-308d-4b4a-8b1d-b7f673ea9295",
        "name": "admin",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "fc74c45e-c1f2-4ce7-8156-4c3efe47c88a",
        "attributes": {}
      },
      {
        "id": "2401f19d-e02a-4f5d-82bd-48acc5e9623a",
        "name": "default-roles-task-management",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "fc74c45e-c1f2-4ce7-8156-4c3efe47c88a",
        "attributes": {}
      },
      {
        "id": "f3a376df-cd42-4f37-ae84-0b1ab1dd6fb8",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "fc74c45e-c1f2-4ce7-8156-4c3efe47c88a",
        "attributes": {}
      },
      {
        "id": "ce2097b3-07ea-4504-ae8e-84573c8ba696",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "fc74c45e-c1f2-4ce7-8156-4c3efe47c88a",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "d645f475-89ac-479b-8867-052b57ea1e22",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "7c8660be-b8dd-45c1-9faf-217cc7b634bf",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "3c2f5437-af06-493a-905a-0a10adabc28c",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "fcd1604d-8309-47a0-b49c-fb83d70273ef",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "5f672e5a-2bf6-4655-8e17-0f89132c26b7",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "669fd7a6-e13b-43f2-8686-a956e317df0e",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "439c1e6a-9724-475b-b65e-b1c051332268",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "dc828974-7335-46dd-885f-85ec288685da",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "32832191-e3d1-44bb-b975-e7c73e0892eb",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "a955b5db-c69c-4c57-b2c7-38025a752371",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "57fbda68-8fe1-43f9-b1d9-873d0df547a4",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "506ca8fc-0186-4d51-8298-aae7ed2f2ed6",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "ac9ae4df-e3b4-4b96-ac79-311f0a993555",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "ebcb943b-ac9b-4e42-bace-f5f473a9f924",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "25395800-df55-4d44-b12e-cfd511cbdeaa",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "73028405-cbdf-4348-bdc3-660bfd599e51",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-users",
                "manage-clients",
                "impersonation",
                "manage-realm",
                "query-clients",
                "query-groups",
                "view-authorization",
                "manage-users",
                "view-realm",
                "view-identity-providers",
                "query-realms",
                "manage-identity-providers",
                "view-events",
                "view-clients",
                "create-client",
                "manage-authorization",
                "manage-events",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "c1388bba-899c-48e7-9aa8-c195d743a0a9",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "64eff15f-d769-4489-8bfa-8fa46655f056",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        },
        {
          "id": "1852cce8-3e1e-48c4-a0ce-100ba7c504b7",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
          "attributes": {}
        }
      ],
      "scalar": [],
      "security-admin-console": [],
      "admin-cli": [],
      "backend": [],
      "account-console": [],
      "broker": [
        {
          "id": "ba817221-e26c-4ffc-991d-c8136259ee12",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "56fe3b92-f29c-418c-97d2-72f2ed2ec685",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "b7ca08bc-f0ff-4502-b81f-a41d4dc9a1d9",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "a8c33a44-c074-421e-a97b-fe3187da8c86",
          "attributes": {}
        },
        {
          "id": "01c79a93-79b7-40f4-a4b4-b53aa83c6428",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "a8c33a44-c074-421e-a97b-fe3187da8c86",
          "attributes": {}
        },
        {
          "id": "df59e1a6-203a-42ad-87fb-cb897b12a7d4",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "a8c33a44-c074-421e-a97b-fe3187da8c86",
          "attributes": {}
        },
        {
          "id": "932887ee-247a-4495-abfd-b15423699b9f",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "a8c33a44-c074-421e-a97b-fe3187da8c86",
          "attributes": {}
        },
        {
          "id": "517cc19f-9581-4819-a57c-fb924dd2147d",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "a8c33a44-c074-421e-a97b-fe3187da8c86",
          "attributes": {}
        },
        {
          "id": "2eaecfd2-4c3f-4177-8778-c623cceec539",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "a8c33a44-c074-421e-a97b-fe3187da8c86",
          "attributes": {}
        },
        {
          "id": "c2781dc1-7bdc-4da4-962e-69b3f4c8dd54",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "a8c33a44-c074-421e-a97b-fe3187da8c86",
          "attributes": {}
        },
        {
          "id": "7d8bc429-262c-48f0-9a0f-e20d8ba337d7",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "a8c33a44-c074-421e-a97b-fe3187da8c86",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "2401f19d-e02a-4f5d-82bd-48acc5e9623a",
    "name": "default-roles-task-management",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "fc74c45e-c1f2-4ce7-8156-4c3efe47c88a"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "9a883612-9a68-493f-91a1-cfc95c2124a0",
      "username": "admin",
      "firstName": "john",
      "lastName": "doe",
      "email": "admin@admin.com",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1755259246834,
      "totp": false,
      "credentials": [
        {
          "id": "f0a64df3-5316-45d8-9905-f7e202b969eb",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1755259273959,
          "secretData": "{\"value\":\"s50575qG2Wy7zWP/Yra2ihcpG7uc50tjBqIocAqv7L4=\",\"salt\":\"uVtkwvQpAqB81McQ/8TOAw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-task-management", "admin"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "63781e95-e8f1-4b9f-ac57-197cf8115ba9",
      "username": "test",
      "firstName": "john",
      "lastName": "smith",
      "email": "test@test.com",
      "emailVerified": false,
      "enabled": true,
      "createdTimestamp": 1749460132504,
      "totp": false,
      "credentials": [
        {
          "id": "a27c35d2-0829-4b90-8ede-8a269185f273",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1749460142789,
          "secretData": "{\"value\":\"G4u9WqWMcA96n6CtdK1+Wm/9UP1STUFeuc6dI8iwfsw=\",\"salt\":\"i301wo/ibKdbWCnhHC32iw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-task-management"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "a8c33a44-c074-421e-a97b-fe3187da8c86",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/task-management/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/task-management/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bc0c2a91-f12b-4496-a5c5-80e5adc364dc",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/task-management/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/task-management/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "fdc40812-b78f-4f3c-b515-e245f2632324",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cdf4ac39-a3e6-44ca-b899-6a10dba91685",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5947595e-6b6a-4aff-834b-a7ad2a47d214",
      "clientId": "backend",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:5000",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:5000/*"],
      "webOrigins": ["http://localhost:5000"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "request.object.signature.alg": "any",
        "request.object.encryption.alg": "any",
        "client.introspection.response.allow.jwt.claim.enabled": "false",
        "standard.token.exchange.enabled": "false",
        "frontchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "backchannel.logout.session.required": "true",
        "request.object.required": "not required",
        "client_credentials.use_refresh_token": "false",
        "access.token.header.type.rfc9068": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "acr.loa.map": "{}",
        "display.on.consent.screen": "false",
        "request.object.encryption.enc": "any",
        "pkce.code.challenge.method": "S256",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "56fe3b92-f29c-418c-97d2-72f2ed2ec685",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ab0a3560-b174-4eb5-ac97-ece2b4f2a5e4",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "14088c5e-8668-4b7c-a013-59fd03f5f243",
      "clientId": "scalar",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:5000/scalar",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://localhost:5000/scalar/callback"],
      "webOrigins": ["http://localhost:5000"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "request.object.signature.alg": "any",
        "request.object.encryption.alg": "any",
        "client.introspection.response.allow.jwt.claim.enabled": "false",
        "standard.token.exchange.enabled": "false",
        "frontchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "use.refresh.tokens": "true",
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "backchannel.logout.session.required": "true",
        "request.object.required": "not required",
        "client_credentials.use_refresh_token": "false",
        "access.token.header.type.rfc9068": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "acr.loa.map": "{}",
        "display.on.consent.screen": "false",
        "request.object.encryption.enc": "any",
        "pkce.code.challenge.method": "S256",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "3c27e052-0cdc-4fa3-923b-5989c9d2c3e3",
          "name": "backend audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "backend",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ae38c269-4a29-43d0-9b77-a7b99a6d34bc",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/task-management/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/task-management/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "d2714688-54af-4ca8-80d9-7fd4844b5e6b",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "a50d651d-c5c0-4e50-be24-d5087ca849f0",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "36fe033b-3269-4289-a8e2-39accb3031a1",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "a0f072d5-4d8c-45ed-b9f5-44949a853e7d",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "719675ac-9b92-4de2-a9c8-9fce07975aca",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "da6e5c50-3b75-4e6d-b5c7-a3cc7b9ebe59",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7b1cfc42-5bfb-4c37-9cfa-3cc92e63f606",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "97e1751e-871e-45f8-a4ed-594a30db94cd",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e6a579ef-93eb-4c91-b7a1-5996c40517f8",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9926b2c5-c0cc-49cb-a193-1f5b07013127",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "782113ed-3023-422c-a8c6-b30c7bd5f45b",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8f78ff48-74f7-4639-80d4-657625b3a0d0",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4a97a01b-e8a7-41e4-8a7b-bc96692b91c5",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c43961ad-b58d-40dc-aa9a-4064b54c92ca",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0a5a688d-fce5-4257-8f66-6a133232be7d",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "585b2685-e859-47da-91a7-934925baacf5",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        }
      ]
    },
    {
      "id": "27ebba82-523c-465b-ae62-e585e0333a5d",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "b7bbc67c-e401-42f1-9a75-3017847656a2",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "16a064bb-b480-48fe-87d0-93afd3508816",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "95598309-2412-4aeb-ad14-1a762fad121d",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "9330956a-45cb-45d3-9240-098c40c023c2",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "513066db-912b-490a-9816-f4b8a5994c24",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b3b6d1b8-69ef-492c-b690-79e5f407bc0d",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "14b9c3a1-b330-4b08-932e-dc5c9fd70064",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "4676d45a-3277-4652-bb92-0c954348349c",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "01f39879-7eb6-4855-9409-abfa8d6257aa",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "75bb221b-240f-4cc2-8e74-590e3663aae8",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "6d6e6baf-7a64-4a62-8ab9-87f237fe008f",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "cb39281a-4249-463c-8bfb-9f18873f092b",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "a53bc387-2815-4733-a6b4-4153f0e641d6",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "6328f535-56a9-4994-b990-1f644935ee79",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "9b827d81-6bc0-4144-b315-aa5525c62a28",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "afd362d6-40a3-4f1d-9733-a37cab9ae469",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "f1e7587d-3de0-46c0-ac78-744ae0bc121a",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b3bc30f1-909a-4c3b-9fd0-0ac4771dd23a",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "77d9484a-9708-4675-806a-bbf862f81494",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "c4a3706a-b916-430e-8437-51b0cb88abce",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "d907caa0-359e-4e84-9384-a83bb06a59eb",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "36a5f739-fa56-46a0-b684-a6cc02390065",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "8026ae48-ae15-4ab6-9633-8f0474144ab7",
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "dda940ca-26d6-497e-a307-68aea089d8fc",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6b89bf83-c575-41e3-9f2b-f93bf447c981",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "439a5eb1-87eb-40cb-a6c3-63b64f499727",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "862e8a07-93b9-45b7-a0df-dd6033b98d01",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "0ca57faf-3294-4a78-86ad-26fbc8cbb640",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "259f4d3b-528e-4f78-b158-a713030b0afc",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "false",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9839a564-18b7-4bec-b28e-1d2ab60924f2",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "705a7d4c-c9d7-4977-b6f1-757051a0a122",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "dc137368-a3ce-4ca8-a0ec-4d098e6ab45f",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "3fc42898-b015-46e6-af23-99853f951e07",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "95afd0a3-998e-4a1c-8e5d-d49250132340",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "aec85888-1667-487a-9cab-de80109d26e1",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "a61bfd6c-3d42-4ca8-bdc6-a82570f10374",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "4f53ed9e-29cc-4dc7-a569-e7bd03c1f6dd",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "e034a7c3-84b9-43ad-a623-3bd87115fc0a",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "0bac5cd8-0963-440d-8acd-3d33f26bc998",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "bcbafc94-45d3-443a-b143-312d6940ec77",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "8a4e7f15-8c5b-49e4-8ccc-74201c1c094c",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["78a6a431-1271-4e1d-8666-91655498b3d5"],
          "secret": [
            "CfSw0ilupO5V9ubFKhpXZ9isGzAhkHIBAyOJJo9JKS00TAQm3BIj5EqH6xvVaZJPVeo0DOvQVo1VUoT27CPYwRsnPKaWvU5ou2XcSP06qzVVzLSuI6E0FG4Tc48DA0LTz0ymG0MvPiWUZY38ptJBWIpMYyYLX4bE6RRt76fFB6U"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "b1218b0a-71c3-4432-83e0-7d03f1464d0a",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAx33hMSorg3UelPLnMlAOaZfZP6DPxsCHuwfVypV8PKQjg6rkJO8bEBsLWkKvwdY7dqWAw7BoMBn2aHB7qHXmAzE9IvNaaEdDNDrP1bKIct/h2s1M/ijQwlkLjRBuplWZ9z6qo31SiHzxHWH4Gs1zlaA1/M6wmkSXzrvUNMBwr9K8cWbBeKyIhHStVa7F5rl2XrXDedvKEqEZITBNEzEK7Xlhia0mKu/FjLh7hjjpORYoGzU5SgGHW2CmAmm5hLEb3K3inneo5b/YZJneLKQmQvU0YQXhGuEUuEWIZGvGQbzG3oYX0twhPCKwQftPFwNtNbP1uPG5kN7bjW16yOgDOwIDAQABAoIBAAsK5Q+I8CStzUlDn6TLOQ9peBb+3bffCdEo1pHV4xOJc5/Psol3pNQoGXsTEuu6lWSnz6NfA4ozsOfIeWFyhg6dYW8RJASx4SUmFkGtfFxJ5HrtZbqLfT0sznT60mBc5hHOEB/OcAAD7n+iX/Ukpz/CjddJhHQQ1PH86q4Xph7NUdwR/y5T/ncBfMaXUaMhfW6ty1lTPG4/lJc8HwgyLmsJNxOLoPG+96RBaMuFcHJOjIgDwINwoUrXfvehkhnGDPB6fvnVMehxTRk5ZtkWmPB7g3rfn5A44atuI4mZHz1SNVnyv5R/g+C73Qpm9SPxidi1RIRlS4cQ4F8QujXOJFECgYEA9vHJQhmdPYG2AmdAkZYimsBt7tyuqR+VNOLMCeToDQq6eZWyYfUXdtqhdDPf0ec9I7A/ovfsuCqZTeGmX1CDAFbBNd98rM+fgOZ7CrgYC5LvyG/FZU+1dCh+VEJh1cHzIOkiPZ5dktuf2sDUNHWlY1imPNTNRX6JcJA33yVA14sCgYEAzs6gWhhxqI5L8HiBJJFKkbxTnQpKL0o5vKdnOocmj4B4X1Jin04TxNxCA+Aznycuu9HkJAk+rqOzIDcGT+0NBjWi+9RmX1Z9qkumauUp671yUWcSfBKcRMQKUPNMH2VM0n9F7CPj2CNuctwYEewSfv07TrW8ZiiIu4EfXAxLeRECgYAF47BUFj5MyDoqBoJgtn7ux+YXS0YTHIC3eS06ky4BmZ7m5W4SrgC4QfCVz+Lno6cuobZy0Yzgu4tacyY/obDuIiOLgF/90xnPvi9zCv7vz7pOQnQnvWXrdkfFBKxGp9B/mW/KnmtG5FwEoJKvCZs/Kk8UplKa9LCccaQTe1T3jwKBgQCbV8JDatEVV63bN+lp2mk1B02XTL9kvlCYUPbNk+93I31HvM6v8yoOWZSM7MBZ8Ei+dG72Uqtu6zAGJs7rApkh7PA8UdOEEafbX2/mI7VVirxwQQg1gpU3YjqNi/PGMYV/KHMRafQfyp2QUZsS+0z5bqY5/XFDG3d5wQgZUHLwwQKBgQCwwsPCFLOr0SDvR6QWbJCYujx3vLpbMWNuixez6OZbbc891UZ+gd1XDWzQhdi5CsFeKYWiQBIxWfnlJTRVIPst7hcptSqTyGWJScTMlBvXWvgoFtyj8/gH1eUuhFBWWA+mjSvZ9psn5nJIbk+T9c42DZZTHSgrQ+aajdgtDLB/Iw=="
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICrTCCAZUCBgGXU/IdoTANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA90YXNrLW1hbmFnZW1lbnQwHhcNMjUwNjA5MDkwNjA1WhcNMzUwNjA5MDkwNzQ1WjAaMRgwFgYDVQQDDA90YXNrLW1hbmFnZW1lbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDHfeExKiuDdR6U8ucyUA5pl9k/oM/GwIe7B9XKlXw8pCODquQk7xsQGwtaQq/B1jt2pYDDsGgwGfZocHuodeYDMT0i81poR0M0Os/Vsohy3+HazUz+KNDCWQuNEG6mVZn3PqqjfVKIfPEdYfgazXOVoDX8zrCaRJfOu9Q0wHCv0rxxZsF4rIiEdK1VrsXmuXZetcN528oSoRkhME0TMQrteWGJrSYq78WMuHuGOOk5FigbNTlKAYdbYKYCabmEsRvcreKed6jlv9hkmd4spCZC9TRhBeEa4RS4RYhka8ZBvMbehhfS3CE8IrBB+08XA201s/W48bmQ3tuNbXrI6AM7AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGVSwoQJZDpDgsM8HnyDc25PxDeYnLfVeDr5Fg6e6AGXiUBjCtXo20oK1DgQXtmxSzC/2MSWZdWkyQSuKLtN2NXXNwsYibMVLzE7ZE/2d97101eqXGEzkLPGKOfETFg2ruVp0SBSTr3NEka23orrDD6sNTrV9Ju85HfL4kUh+8KnoFQcwMAxnl633W6nEcF6AQs0OwohbWqvn4vPsZcFbiXjY+cDW8jyG2AqGc01Th87jyVfQUglpmsH6KGexBd/pkXDBZVKmkI/E8BkjiPlH2q0h6WLXPpAlb2oNF6G6EG6aRmxHM1mGPMX0owb0qecIIgasoCqkWKqogil8ltaGdo="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "d69780be-36fd-4bcf-8aba-ea540dd1e4a0",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["62fc5d3c-a3d2-40f4-9cb3-bdd3eb897fd8"],
          "secret": ["UdVElXBenM9VS4QqTTQaFQ"],
          "priority": ["100"]
        }
      },
      {
        "id": "68ca31bd-772f-49c5-8e62-877dfcfd2448",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAzVp4li0zmGA7MSihWseb7UOoXb9X9wkkYKzlew2iuY0U0M65AkZneukwPmZKGVDcPVyEYw1Ld3UHJkfPVQhRGyaSxmXPxGT/IfM7Vf42rrlm0s6V38vmEEaBGwWSXwoiDpP3b/+IKAgcxNbD7zO4LuG1SI3hsuy3wjCGa+tPnQPcVxlp7pZsTmmHyPXerhmI8kbl3X8clYITQnYrC1pO5XlN8FO47gEgEG2ryC7vlIOEPiDPXvFc+A4+pHc8vEDODhEybitaH5u8enJjU01cOkdTCfz42nXlfXM31ndHZLFQJjW7ftn/i+fLBlG67dkhoOpoMa8TEUgafI3pmDw5VwIDAQABAoIBAEa8hlM8yMwRQfKCC2rI3XZSWvnIApYO6SAADqBfpxEBfw0aWHJnLBgToVGtTJMB3ouohdXU64z/m/HcxJeG4OFYXTDIO1RscdIRBfxuMAnpxXiSPuAzTVGH58sWFUB1rhuVbqN+wzj+6mIHlMCd8TD9AMQ4U2mdzwKuUm90RB1Sa4m78RVTzcx68Dd9NgeX37Vun+sqblji9y0vKaC8AFpWxdQk4xaeYYybJo4tdiTrJrjY8wauWoPLb8TCsngTt+jftCZ6MasIBYFZHKLXmcXNfVAEnHrlqYUI0+7LgJ3isVcP+CWdUyanaB2OgKoWJMJ24iDPPQDyCJfpxXmsVJkCgYEA+rLI/1GHIT6lZkJm+Swa6BN5XdOijWAVxD8sffh0kHO1A1Q2R5p2zHRnBu2YfMYknoRbcY5qkHJ+0rGlR9SAHBWNFufr5dqZWrvhCui3OUf5+1qqmjET23egNxl1Sb/aZ1RUf64XQL/1ST/wXunO2Kj6IudseperGHq8yNqeXYsCgYEA0bIzPaLYKwus5haDrOadiDa3yedLGH+JohOUWhmxvOAo90MN1hOIPPa0LYUBMwmBXRcdMi65M/DNjvEDBasX0gWsv+3p/pSqMjESZP4vWA7xpWomFN3c3nsNkBpDSB7XweR5T80dgHYHf/YATzTN49q4MBCr7GZv3l28EK2hJOUCgYEAj4lbwatZNjSbGLB+Kr4Q7b1wqMLqeA2CiOkuvTVK8AX/ptdJeLe8uxUOhA33V8FO6B+aB6tl4ixb5qBlpHnLm8jPDkVdcC43zZZyo/9YIIjQXRStRzlASFD2v3VpDP+2uaCz/KKdl6oQc48TPhSaJLyi8ucT2iEKiiqD+nAJaj8CgYBZwpLGfm9TtbKz5s1EdI7YILv5NAVkHiu28fSdwMPhGn7OoKhKi5/UoLGtjnJd+2Khi2RW98MVJa2H00i842jV4NH6cgeojtBvnavHCTsQ0YzEhrR4WCPUJA5BMcy9EV6/w2HeM+m99EfvkUi+ntbHAve2s1w0XADkyXDYHsqMtQKBgQCOAJM9BT6T5SiC8Sm1y4EDgkzVW+P6T79N//u2PudSR0wPLFAVHAHD9LKSoBwB7IQ32r8Ka43RphlC3BeecaoV0PkEPE1tCDNOSlSAFlrtjkarHU41xa4pdy0gYvLt6a4vfv19RYSbkjHCVVK9sM2UzJUrGHzxqZXSMkhEsDgqnQ=="
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICrTCCAZUCBgGXU/IdhDANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA90YXNrLW1hbmFnZW1lbnQwHhcNMjUwNjA5MDkwNjA1WhcNMzUwNjA5MDkwNzQ1WjAaMRgwFgYDVQQDDA90YXNrLW1hbmFnZW1lbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDNWniWLTOYYDsxKKFax5vtQ6hdv1f3CSRgrOV7DaK5jRTQzrkCRmd66TA+ZkoZUNw9XIRjDUt3dQcmR89VCFEbJpLGZc/EZP8h8ztV/jauuWbSzpXfy+YQRoEbBZJfCiIOk/dv/4goCBzE1sPvM7gu4bVIjeGy7LfCMIZr60+dA9xXGWnulmxOaYfI9d6uGYjyRuXdfxyVghNCdisLWk7leU3wU7juASAQbavILu+Ug4Q+IM9e8Vz4Dj6kdzy8QM4OETJuK1ofm7x6cmNTTVw6R1MJ/PjadeV9czfWd0dksVAmNbt+2f+L58sGUbrt2SGg6mgxrxMRSBp8jemYPDlXAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAE7DHUukZFvxriSAqg8sXvZ4+BJQGYcI6YFxFvatlLvJfPuEplg0R3Z7llqHxci6VDVdELbuskPlv6UrZr7OJLswaf6rJKRX33gQzfeVQwmE0hbz8CnJ6LlJ5jxKtGkLNKCwqEZnXWapDibk/kk87R/6QJEkWqt55s2owsK1TUPHtyiLxsyEeEhRPrvPMbRXZBfQ3OdsSFyuvNFYws3hiZzgjEJUGJHbKYC0Tws588oKVXggi87nFZetxpjmrpfwd1KQmBxwjq8stmdKS3qluCOODTXQazYbsly+hKpce844WpU9uSvTbehNYXQwSiYO1uo7YdFERniiqcimww+r9R4="
          ],
          "priority": ["100"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "authenticationFlows": [
    {
      "id": "46dc48da-e4fa-4f06-81ab-634f4aa851a2",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ed3e8e4b-f832-4dbd-8b15-025d7837e74a",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8ba26e28-339b-4fd6-a668-f348e563143d",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "95346c5c-629f-4a05-9aa6-e7830ec36609",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "495ff49d-a486-46be-8a66-6af9b8ff3a98",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b57952da-75cf-43fa-888d-60855fad2599",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0caab390-8048-4aa9-b18b-e9b9d6e4bc60",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "adee092c-75e1-420c-b15e-8e0e63fc67c0",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "61d2c1c9-64cf-4bee-a9ab-b6a212b9ad01",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a7a72d1a-19f3-49ca-a2c6-2a7565157239",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6c7337ed-b2d7-4f71-ac45-f929f7851caf",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "48e37765-4478-4caa-bb52-5b085cae9668",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "40bfe9f2-96ad-4455-ab08-cefa956f0441",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4d0ac367-3672-42ae-a583-8e03e121556e",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cc18a823-3db4-4af3-89f9-9edd1916b534",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f63579d3-fc7a-4353-84b8-6a11b133cc2d",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "db85db3d-3eea-4d5e-a3c4-0a5d4b3883db",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "463ba5f2-0967-434e-9d28-fe3e497e6720",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "07405ef3-9f73-4d63-b8ff-b3350b37bdf8",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "114a7b13-7d8d-4e4f-9ce3-dc0d820a5787",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e8b83cff-5b14-4ba0-941c-5f4e53ddc15d",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "d9a06a2d-270f-45da-9dbe-e817650c9ef7",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "3ea07e2c-91d2-4602-8285-a6e7b8f75503",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.3.2",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
